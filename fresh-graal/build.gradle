plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "com.github.johnrengelman.shadow" version "4.0.2"
    id "net.ltgt.apt-eclipse" version "0.18"
    id "net.ltgt.apt-idea" version "0.18"	
    id "com.palantir.graal" version "0.3.0-4-ge8f0cb2"
}

apply plugin:"application"
apply plugin:"java"

version "0.1"
group "fresh.graal"

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/"}
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.1.0.BUILD-SNAPSHOT'
    }
}

dependencies {
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    annotationProcessor "io.micronaut:micronaut-graal"
    compile "io.micronaut:micronaut-http-client"
    compile "io.micronaut:micronaut-http-server-netty"
    compile "io.micronaut:micronaut-inject"
    compile "io.micronaut:micronaut-validation"
    compile "io.micronaut:micronaut-runtime"
    compileOnly "com.oracle.substratevm:svm"
    compileOnly "io.micronaut:micronaut-inject-java"
    runtime "ch.qos.logback:logback-classic:1.2.3"
    runtime "io.micronaut:micronaut-graal"
    testCompile "junit:junit:4.12"
    testCompile "io.micronaut:micronaut-inject-java"
    testCompile "org.hamcrest:hamcrest-all:1.3"
}

graal {
    mainClass 'fresh.graal.Application'
    outputName 'fresh-java'
    graalVersion '1.0.0-rc13'
    option "-H:ReflectionConfigurationFiles=${sourceSets.main.java.outputDir}/META-INF/reflect.json"
    option '--allow-incomplete-classpath'
    option '-H:IncludeResources=logback.xml|application.yml'
    option '-H:EnableURLProtocols=http'
    option '-H:+ReportUnsupportedElementsAtRuntime'
    option '-H:+AllowVMInspection'
    option '--rerun-class-initialization-at-runtime=sun.security.jca.JCAUtil$CachedSecureRandomHolder,javax.net.ssl.SSLContext'
    option "--delay-class-initialization-to-runtime=io.micronaut.reactive.reactor.ReactorInstrumentation,io.netty.handler.codec.http.HttpObjectEncoder,io.netty.handler.codec.http.websocketx.WebSocket00FrameEncoder,io.netty.handler.ssl.util.ThreadLocalInsecureRandom,com.sun.jndi.dns.DnsClient"
}

shadowJar {
    mergeServiceFiles()
}

run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1')

mainClassName = "fresh.graal.Application"
tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}
